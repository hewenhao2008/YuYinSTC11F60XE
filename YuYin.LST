C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE YUYIN
OBJECT MODULE PLACED IN YuYin.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE YuYin.c OPTIMIZE(9,SPEED) BROWSE INCDIR(C:\Keil\C51\INC) DEBUG OBJECTEXTEND
                    - TABS(2)

line level    source

   1          #include "STC11F60XE.h"
   2          #include "intrins.h"
   3          #include "ds18b20.h"
   4          #include <string.h>
   5          
   6          sbit JS = P2 ^ 4;//红外接收端口!
   7          sbit Y  = P2 ^ 5; //红外发射端口   
   8          sbit WF = P0 ^ 4; //无线发射端口 
   9          
  10          sbit WIFI_LED = P3 ^ 6; //wifi复位LED指示灯
  11          sbit WAKEUP_LED = P0 ^ 3; //唤醒状态指示灯
  12          sbit RST = P1 ^ 4; //wifi复位RST 
  13          
  14          #define LED_ON 1
  15          #define LED_OFF !(LED_ON)
  16          
  17          bit F = 0;    //是否打开38KH方波调制
  18          bit Wifi_Command_Mode = 0; //=1 wifi工作在命令模式 =0 工作在数据传输模式
  19          bit Check_wifi = 1;   //检测wifi工作模式
  20          bit Get_Wifi_MAC = 0; //检测wifi模块MAC地址标志，只在STA模式下检测
  21          unsigned int Wifi_MAC_Count = 0;
  22          unsigned int Wifi_AP_OPEN_MODE = 0; //wifi工作在AP的OPEN模式下，灯闪烁
  23          unsigned int RST_count1 = 0; //计数
  24          unsigned int RST_count2 = 0;
  25          unsigned char Temperature = 0; //温度
  26          unsigned int T = 0; //计数
  27          
  28          
  29          unsigned int i = 0;//计数用 
  30          unsigned int j = 0;//计数用
  31          unsigned int c = 0;//计数用
  32          
  33          unsigned int ui = 0;//串口接收数据长度!
  34          xdata unsigned char US[800];//xdata unsigned char US[256]; //定义串口接收数据变量!
  35          xdata unsigned char Wifi_MAC[32] = 0x00;
  36          
  37          /*
  38          void Delay10us()    //@22.1184MHz
  39          {
  40            unsigned char i;
  41          
  42            _nop_();
  43            i = 52;
  44            while (--i);
  45          }
  46          */
  47          
  48          void U1_in()//串口1接收数据
  49          {
  50   1        j = 0; //超时退出!
  51   1        ui = 0;
  52   1        while(j < 40000)//超时退出(大约1ms)!需要测试此值是否正确! 5000
  53   1        {
  54   2          if(RI == 1)
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 2   

  55   2          {
  56   3            US[ui] = SBUF;
  57   3            if(US[ui] == '<' && US[ui - 1] == '<')
  58   3              break;
  59   3            RI = 0;
  60   3            ui++;
  61   3            j = 0;      
  62   3          }
  63   2          else
  64   2            j++;
  65   2          //Delay10us();//延时时间需要测试此值是否正确!(此处要加延时,要不数据接收不正确!)
  66   2        } 
  67   1        RI = 0; 
  68   1      }
  69          
  70          void U1_send(unsigned char i)//串口1发送单字节数据
  71          {
  72   1        TI = 0;     //令接收中断标志位为0（软件清零）
  73   1        SBUF = i; //接收数据 SBUF 为单片机的接收发送缓冲寄存器
  74   1        while(TI==0);
  75   1        TI = 0;     //令接收中断标志位为0（软件清零）
  76   1      }
  77          
  78          void U1_sendS(unsigned char s[], unsigned int m)//串口1发送字符串数据,U1_sendS函数必须加"<<"结束标志!
  79          {
  80   1        unsigned int n = 0;
  81   1        for(n = 0;n < m;n++)
  82   1          U1_send(s[n]);
  83   1      }
  84          
  85          
  86          void T0Init(void)   //13微秒@22.1184MHz
  87          {
  88   1        AUXR &= 0x7F;   //定时器时钟12T模式
  89   1        TMOD &= 0xF0;   //设置定时器模式
  90   1        TMOD |= 0x02;   //设置定时器模式
  91   1        TL0 = 0xE8;   //设置定时初值
  92   1        TH0 = 0xE8;   //设置定时重载值
  93   1        TF0 = 0;    //清除TF0标志
  94   1        TR0 = 0;    //定时器0开始计时
  95   1        
  96   1        ET0 = 1;
  97   1        EA = 1;
  98   1      }
  99          
 100          void T0_C1 (void) interrupt 1  using 2 //单片机的中断号1对应的中断:定时器中断0
 101          {    
 102   1        T++;
 103   1        if(F == 1)
 104   1            Y = ~Y;
 105   1      }
 106          
 107          typedef union //char型数据转int型数据类 
 108          {  
 109            unsigned short int ue; 
 110            unsigned char    u[2]; 
 111          }U16U8;
 112          U16U8 idata M;//两个8位转16位
 113          
 114          void U1Init(void)   //115200bps@22.1184MHz
 115          {
 116   1        PCON |= 0x80;   //使能波特率倍速位SMOD
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 3   

 117   1        SCON = 0x50;    //8位数据,可变波特率
 118   1        AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
 119   1        BRT = 0xF4;   //设定独立波特率发生器重装值
 120   1        AUXR |= 0x01;   //串口1选择独立波特率发生器为波特率发生器
 121   1        AUXR |= 0x10;   //启动独立波特率发生器
 122   1      }
 123          
 124          void Rstinit()
 125          {
 126   1        //配置为仅输入
 127   1        P1M1 |= (1<<4);
 128   1        P1M0 &= ~(1<<4);
 129   1      }
 130          
 131          /*--------------
 132          ---wifi mode----
 133          --------------*/
 134          void Delay10ms()    //@22.1184MHz
 135          {
 136   1        unsigned char i, j, k;
 137   1      
 138   1        i = 1;
 139   1        j = 216;
 140   1        k = 35;
 141   1        do
 142   1        {
 143   2          do
 144   2          {
 145   3            while (--k);
 146   3          } while (--j);
 147   2        } while (--i);
 148   1      }
 149          
 150          void Timer1Init(void)   //5毫秒@22.1184MHz
 151          {
 152   1        AUXR &= 0xBF;   //定时器时钟12T模式
 153   1        TMOD &= 0x0F;   //设置定时器模式
 154   1        TMOD |= 0x10;   //设置定时器模式
 155   1        TL1 = 0x00;   //设置定时初值
 156   1        TH1 = 0xDC;   //设置定时初值
 157   1        TF1 = 0;    //清除TF1标志
 158   1        TR1 = 1;    //定时器1开始计时
 159   1        
 160   1        ET1 =1;
 161   1        EA = 1;
 162   1      }
 163          
 164          
 165          void T1() interrupt 3 using 3
 166          {
 167   1        if(Wifi_AP_OPEN_MODE)
 168   1        {
 169   2          Wifi_AP_OPEN_MODE++;
 170   2          if(Wifi_AP_OPEN_MODE == 50)
 171   2          {
 172   3            WIFI_LED = !WIFI_LED;
 173   3            Wifi_AP_OPEN_MODE = 1;
 174   3          }
 175   2        }
 176   1        /*
 177   1        else
 178   1        {
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 4   

 179   1          Wifi_MAC_Count++;
 180   1          if(Wifi_MAC_Count == 200*60*5) //5分钟定时
 181   1          {
 182   1            Get_Wifi_MAC = 1;
 183   1            Wifi_MAC_Count = 0;
 184   1          } 
 185   1        }
 186   1        */
 187   1        TL1 = 0x00;   //设置定时初值
 188   1        TH1 = 0xDC;   //设置定时初值  
 189   1        TR1 = 1;    //定时器1开始计时 
 190   1      }
 191          
 192          int start_wifi_command()
 193          {
 194   1        U1_sendS("+++",3);
 195   1        memset(US,0x00,sizeof(US)); 
 196   1        U1_in();
 197   1        if(US[0] == 'a')
 198   1        { 
 199   2          memset(US,0x00,sizeof(US));
 200   2          //Delay50ms();
 201   2          U1_send('a');
 202   2          U1_in();      
 203   2          if(strstr(US,"+ok") != NULL)
 204   2          {
 205   3            Wifi_Command_Mode = 1;
 206   3            memset(US,0x00,sizeof(US));
 207   3            return 0; //切换成功
 208   3          } 
 209   2        }
 210   1        memset(US,0x00,sizeof(US));
 211   1        return 1;
 212   1      }
 213          
 214          int start_wifi_data()
 215          {
 216   1        U1_sendS("AT+ENTM\r\n",9);
 217   1        U1_in();
 218   1        if(strstr(US,"+ok") != NULL)
 219   1        {   
 220   2          Wifi_Command_Mode = 0;
 221   2          memset(US,0x00,sizeof(US));
 222   2          return 0; //切换成功
 223   2        }
 224   1        memset(US,0x00,sizeof(US));
 225   1        return 1; 
 226   1      }
 227          
 228          void main (void)
 229          {
 230   1        WF = 0;
 231   1        WIFI_LED =LED_ON;// LED_ON;
 232   1        WAKEUP_LED = LED_OFF;
 233   1        U1Init();
 234   1        T0Init(); 
 235   1        Timer1Init();
 236   1        Rstinit();
 237   1        Init_DS18B20(); 
 238   1        //CH:<<       红外采集命令    //CH:长度+数据<<  //采集后返回的数据
 239   1        //FH:长度+数据<<  红外发射命令
 240   1        //FW:长度+数据<<    无线发射命令
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 5   

 241   1        //FS:<<       心跳
 242   1        //网络传来的是byte格式的数据
 243   1        //while(1);
 244   1        while(1)
 245   1        {
 246   2          if(Check_wifi)
 247   2          {
 248   3            TR1 = 0;
 249   3            if(!Wifi_Command_Mode)
 250   3            {
 251   4              start_wifi_command();
 252   4            }
 253   3            if(Wifi_Command_Mode)
 254   3            {
 255   4              Delay10ms();
 256   4              U1_sendS("AT+WMODE\r\n",10);  
 257   4              Check_wifi = 0; 
 258   4            }
 259   3            TR1 = 1;
 260   3          } 
 261   2          if(!Wifi_AP_OPEN_MODE)
 262   2          {
 263   3            WIFI_LED = RST; 
 264   3            if(Get_Wifi_MAC)
 265   3            {
 266   4              TR1 = 0;
 267   4              if(!Wifi_Command_Mode)
 268   4              {
 269   5                start_wifi_command();
 270   5              }
 271   4              if(Wifi_Command_Mode)
 272   4              {
 273   5                Delay10ms();
 274   5                U1_sendS("AT+NMAC\r\n",9);  
 275   5              }
 276   4            }
 277   3          }
 278   2          if(RST == 0)
 279   2          {
 280   3            TR1 = 0;
 281   3            WIFI_LED = RST;
 282   3            while(RST == 0)
 283   3            {
 284   4              RST_count1++;
 285   4              if(RST_count1 == 65535)
 286   4              {
 287   5                RST_count1 = 0;
 288   5                RST_count2++;
 289   5              }
 290   4            }
 291   3            if(RST_count2 >= 5)
 292   3            {
 293   4              Wifi_Command_Mode = 0;
 294   4              Get_Wifi_MAC = 0;
 295   4              Check_wifi = 1;
 296   4              RST_count1 = 0;
 297   4              RST_count2 = 0;
 298   4            } 
 299   3            TR1 = 1;
 300   3          } 
 301   2          if(RI==1)
 302   2          {
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 6   

 303   3            U1_in();//获取串口发送的SJ数据!
 304   3            if(US[2] == ':')//接收到正确的控制数据!
 305   3            {
 306   4              TR1 = 0;
 307   4              switch(US[0])
 308   4              {
 309   5                case 'F'://红外、无线数据发射!
 310   5                  WIFI_LED = LED_OFF;
 311   5                  if(US[1]=='H')//红外
 312   5                  {             
 313   6                    i = 4;//第3与4位是数据长度,从第4位是红外、无线控制数据
 314   6                    M.u[0] = US[3];
 315   6                    M.u[1] = US[4];
 316   6                    j = M.ue;           
 317   6                    TR0 = 1;    //启动定时器0
 318   6                    while(i < j)//j是数据长度-1!
 319   6                    {
 320   7                      T = 0;
 321   7                      F = 1;
 322   7                      i++;
 323   7                      if(US[i] == 0)//&&US[i+1]==0)
 324   7                      {
 325   8                        i += 2;
 326   8                        M.u[0] = US[i];
 327   8                        i++;  
 328   8                        M.u[1] = US[i];
 329   8                      }
 330   7                      else
 331   7                      {
 332   8                        M.u[0] = 0; 
 333   8                        M.u[1] = US[i];
 334   8                      }
 335   7                      while(T < M.ue);
 336   7      
 337   7                      T = 0;
 338   7                      F = 0;
 339   7                      Y = 1;
 340   7                      i++;
 341   7                      if(US[i] == 0)//&&uip_appdata[i+1]==0)
 342   7                      {
 343   8                        i += 2;
 344   8                        M.u[0] = US[i];
 345   8                        i++;  
 346   8                        M.u[1] = US[i];
 347   8                      }
 348   7                      else
 349   7                      {
 350   8                        M.u[0] = 0; 
 351   8                        M.u[1] = US[i];
 352   8                      }
 353   7                      while(T < M.ue);                
 354   7                    }
 355   6                    TR0 = 0;    //关闭定时器0
 356   6                    U1_sendS("FH<<", 4); 
 357   6                    WIFI_LED = LED_ON;
 358   6                  }
 359   5                  else if(US[1]=='W')
 360   5                  {           
 361   6                    c = 0;
 362   6                    TR0 = 1;    //启动定时器0
 363   6                    while(c < 6)//重复次数!
 364   6                    {
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 7   

 365   7                      T = 0;
 366   7                      WF = 1;
 367   7                      i = 4;//第3与4位是数据长度,从第5位是红外、无线控制数据
 368   7                      while(T < 28);//(13 * 808 = 10504同步脉宽!                  
 369   7                      T = 0;
 370   7                      WF = 0;
 371   7                      M.u[0] = US[3];
 372   7                      M.u[1] = US[4];
 373   7                      j = M.ue;//主机生成的长度要减1
 374   7                      while(T < 808);//(13 * 808 = 10504同步脉宽!
 375   7      
 376   7                      while(i < j)
 377   7                      {
 378   8                        T = 0;
 379   8                        WF = 1;
 380   8                        i++;
 381   8                        while(T < US[i]);
 382   8      
 383   8                        T = 0;
 384   8                        WF = 0;
 385   8                        i++;//i在此,精准一些
 386   8                        while(T < US[i]);
 387   8                      }
 388   7                      c++;
 389   7                    }
 390   6                    TR0 = 0;
 391   6                    WF = 0;   //关闭定时器0
 392   6                    U1_sendS("FW<<", 4);
 393   6                  }
 394   5                  else if(US[1]=='S')
 395   5                  {
 396   6                    U1_sendS("FS<<", 4);
 397   6                  }
 398   5      
 399   5                  break;
 400   5      
 401   5                case 'C'://红外采集!
 402   5                  U1_sendS("CA<<", 4);//返回到主机请按遥控器("<<"在U1_sendS中添加)
 403   5                  i = 5;//第3与4位是数据长度,从第4位是红外、无线控制数据
 404   5                  j = 0;
 405   5                  TR0 = 1;    //启动定时器0
 406   5                  while(i < 756) //长度给这句有关-->>US[2] = i;//第三位是数据长度
 407   5                  { 
 408   6                    T = 1;   //应该能提高准确率
 409   6                    while(JS == 0);
 410   6                    if(T > 5)
 411   6                    {
 412   7                      M.ue = T;
 413   7                      T = 1;
 414   7                      if(M.u[0] > 0)
 415   7                      {
 416   8                        US[i] = 0;  //将接收的数据发送回去（删除//即生效）
 417   8                        i++;
 418   8                        US[i] = 0;  //将接收的数据发送回去（删除//即生效）
 419   8                        i++;
 420   8                        US[i] = M.u[0]; //将接收的数据发送回去（删除//即生效）
 421   8                        i++;
 422   8                      }
 423   7                      US[i] = M.u[1];
 424   7                      i++;  
 425   7                      while(JS == 1)
 426   7                      {               
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 8   

 427   8                        if(T > 6000)//无数据退出                
 428   8                        {
 429   9                          US[i] = 0;
 430   9                          i++;
 431   9      
 432   9                          M.ue = i;
 433   9                          US[3] = M.u[0];//第3与4位是数据长度(包括数据头,不包括结尾!)
 434   9                          US[4] = M.u[1];//第3与4位是数据长度(包括数据头,不包括结尾!)
 435   9                               
 436   9                          US[i] = '<';
 437   9                          i++;
 438   9                          US[i] = '<';
 439   9                          i++;
 440   9      
 441   9                          US[0] = 'C';
 442   9                          US[1] = 'H';
 443   9                          US[2] = ':';                                  
 444   9                          U1_sendS(US, i);//红外采集成功
 445   9      
 446   9                          i = 756;
 447   9                          break;
 448   9                        }
 449   8                      }
 450   7                      if(i < 756)
 451   7                      {       
 452   8                        M.ue = T;
 453   8              
 454   8                        if(M.u[0] > 0)
 455   8                        {
 456   9                          US[i] = 0;
 457   9                          i++;
 458   9                          US[i] = 0;
 459   9                          i++;
 460   9                          US[i] = M.u[0];
 461   9                          i++;
 462   9                        }
 463   8                        US[i] = M.u[1];
 464   8                        i++;
 465   8                        j = 0;
 466   8                      }
 467   7                    }
 468   6                    else
 469   6                    {
 470   7                      while(JS == 1)
 471   7                      {
 472   8                        if(T > 50000)
 473   8                        {
 474   9                          T = 0;
 475   9                          j++;
 476   9                          if(j > 30)
 477   9                          {
 478  10                            i = 756;
 479  10                            U1_sendS("CC<<", 4);//超时退出!大约20秒无操作退出!
 480  10                            break;
 481  10                          }
 482   9                        }
 483   8                      }
 484   7                    }
 485   6                  }
 486   5                  TR0 = 0;    //关闭定时器0
 487   5                  break;
 488   5                case 'D':
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 9   

 489   5                    switch(US[1])
 490   5                    {
 491   6                      case 'T'://温度
 492   6                              memset(US,0x00,sizeof(US));
 493   6                              US[0] = 'D';
 494   6                              US[1] = 'T';
 495   6                              while((US[2] = GetTemperature()) == 0x55);
 496   6                              US[3] = '<';
 497   6                              US[4] = '<';
 498   6                              U1_sendS(US, 5);  
 499   6                              break;
 500   6                      case 'D'://wifi复位
 501   6                              Check_wifi = 1;
 502   6                              Wifi_Command_Mode = 0;
 503   6                              U1_sendS("DS<<",4);
 504   6                              break;
 505   6                      case 'M'://获取wifiMAC地址
 506   6                              Get_Wifi_MAC = 1;
 507   6                              break;        
 508   6                      default:break;        
 509   6                    }
 510   5                    break;
 511   5                case 'L': //唤醒状态指示灯
 512   5                    if(US[1] == 'B')
 513   5                    {
 514   6                      WAKEUP_LED = LED_ON;
 515   6                      U1_sendS("LB<<",4);
 516   6                    } 
 517   5                    else if(US[1] == 'D')
 518   5                    {
 519   6                      WAKEUP_LED = LED_OFF;
 520   6                      U1_sendS("LD<<",4);
 521   6                    }
 522   5                    break;
 523   5                default:break;  
 524   5              }
 525   4              TR1 = 1;
 526   4            }
 527   3            else if(strstr(US,"+o") != NULL) //收到wifi模块返回的数据 +ok
 528   3            {
 529   4              if(strstr(US,"AP") != NULL)   //wifi工作在AP模式
 530   4              {
 531   5                Delay10ms();
 532   5                U1_sendS("AT+WAKEY\r\n",10);
 533   5              }
 534   4              else if(strstr(US,"OPEN") != NULL) //AP模式下的open加密  
 535   4              {
 536   5                Check_wifi = 0;
 537   5                Wifi_AP_OPEN_MODE = 1;
 538   5                TR1 = 1;
 539   5                if(!start_wifi_data())
 540   5                {
 541   6                  Check_wifi = 0;
 542   6                  Wifi_Command_Mode = 0;
 543   6                }
 544   5              }
 545   4              else if(strstr(US,"MAC") != NULL)
 546   4              {
 547   5                memset(Wifi_MAC,0x00,sizeof(Wifi_MAC));
 548   5                memcpy(Wifi_MAC,&US[9],26);
 549   5                if(!start_wifi_data())
 550   5                {
C51 COMPILER V9.01   YUYIN                                                                 09/23/2013 16:50:19 PAGE 10  

 551   6                  Get_Wifi_MAC = 0;
 552   6                  Wifi_Command_Mode = 0;
 553   6                  U1_sendS("DM:",3);
 554   6                  U1_sendS(Wifi_MAC,26);
 555   6                  U1_sendS("<<",2);
 556   6                }
 557   5                Wifi_MAC_Count = 0;
 558   5                TR1 = 1;
 559   5              }
 560   4              else
 561   4              {
 562   5                if(!start_wifi_data())
 563   5                {
 564   6                  Check_wifi = 0;
 565   6                  Wifi_Command_Mode = 0;
 566   6                  Wifi_AP_OPEN_MODE = 0;
 567   6                }
 568   5              }
 569   4            }
 570   3          }
 571   2          US[2] = 0x00;//一个串口命令执行完毕, 清空
 572   2        }
 573   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1865    ----
   CONSTANT SIZE    =    112    ----
   XDATA SIZE       =    832    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     19       5
   IDATA SIZE       =      2    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
